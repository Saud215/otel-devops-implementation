# ci code only for product catalog service of otel demo

name: product-catalog-service-ci

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  code-quality:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Go 1.22
        uses: actions/setup-go@v2
        with:
          go-version: 1.22

      - name: Running golangci-lint
        uses: golangci/golangci-lint-action@v6
        with:
          version: v1.55.2
          working-directory: src/product-catalog
          run: golangci-lint run

  build:
    runs-on: ubuntu-latest

    needs: [code-quality]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Go 1.22
        uses: actions/setup-go@v2
        with:
          go-version: 1.22

      - name: Build
        run: |
          cd src/product-catalog
          go mod download
          go build -o product-catalog-service main.go

      - name: Unit Tests
        run: |
          cd src/product-catalog
          go test ./...

  image-update:
    runs-on: ubuntu-latest

    needs: [build]

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Install Docker
        uses: docker/setup-buildx-action@v2

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Build and Push Docker Image
        uses: docker/build-push-action@v6
        with:
          context: ./src/product-catalog
          file: ./src/product-catalog/Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/otel-demo-product-catalog-service:${{ github.run_id}}

  update-k8s-manifest:
    runs-on: ubuntu-latest

    needs: [code-quality, build, image-update]

    steps:
      - name: checkout code
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Install yq
        run: |
          sudo wget -qO /usr/local/bin/yq https://github.com/mikefarah/yq/releases/download/v4.44.1/yq_linux_amd64
          sudo chmod +x /usr/local/bin/yq

      - name: Update tag in kubernetes deployment manifest
        run: |
          yq -i '
            (. | select(.kind == "Deployment" and .metadata.name == "opentelemetry-demo-productcatalogservice")
            .spec.template.spec.containers[].image) = "${{ secrets.DOCKER_USERNAME }}/otel-demo-product-catalog-service:${{ github.run_id }}"
          ' kubernetes/productcatalog/deploy.yaml

      - name: Update tags in kubernetes three-deploy manifest
        run: |
          yq -i '
          (. | select(.kind == "Deployment" and .metadata.name == "opentelemetry-demo-adservice")
          .spec.template.spec.containers[].image) = "${{ secrets.DOCKER_USERNAME }}/otel-demo-ad-service:${{ github.run_id }}" |

          (. | select(.kind == "Deployment" and .metadata.name == "opentelemetry-demo-productcatalogservice")
          .spec.template.spec.containers[].image) = "${{ secrets.DOCKER_USERNAME }}/otel-demo-product-catalog-service:${{ github.run_id }}" |

          (. | select(.kind == "Deployment" and .metadata.name == "opentelemetry-demo-recommendationservice")
          .spec.template.spec.containers[].image) = "${{ secrets.DOCKER_USERNAME }}/otel-demo-recommendation-service:${{ github.run_id }}"
          ' kubernetes/three-deploy.yaml

      - name: Commit and push changes
        run: |
          git config --global user.email "mohdsaud1523@gmail.com"
          git config --global user.name "Saud215"
          git add kubernetes/productcatalog/deploy.yaml kubernetes/three-deploy.yaml
          git commit -m "[CI]: Update microservice image tags" || echo "No changes to commit"
          git push origin HEAD:main
