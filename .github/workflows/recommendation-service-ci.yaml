name: recommendation-service-ci

on:
  push:
    branches:
      - main
    paths:
      - "src/recommendation/**"
      - ".github/workflows/recommendation-service-ci.yaml"
      - "kubernetes/recommendation/**"
      - "kubernetes/three-deploy.yaml"
  pull_request:
    branches:
      - main

jobs:
  lint-and-analysis:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python 3.12
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Install dependencies
        working-directory: src/recommendation
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install flake8 bandit

      - name: Run Flake8 (style/linting)
        working-directory: src/recommendation
        run: flake8 .

      - name: Run Bandit (security scan)
        working-directory: src/recommendation
        run: bandit -r .

  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python 3.12
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Install dependencies
        working-directory: src/recommendation
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run tests
        working-directory: src/recommendation
        run: |
          echo "No tests available yet!"

  image-update:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Docker
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Build and Push Docker Image
        uses: docker/build-push-action@v6
        with:
          context: src/recommendation
          file: src/recommendation/Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/otel-demo-recommendation-service:${{ github.run_id}}

  update-k8s-manifest:
    runs-on: ubuntu-latest

    needs: [build, image-update]

    steps:
      - name: checkout code
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GH_TOKEN }}

      - name: Install yq
        run: |
          sudo wget -qO /usr/local/bin/yq https://github.com/mikefarah/yq/releases/download/v4.44.1/yq_linux_amd64
          sudo chmod +x /usr/local/bin/yq

      - name: Update tag in kubernetes deployment manifest
        run: |
          yq -i '
            (. | select(.kind == "Deployment" and .metadata.name == "opentelemetry-demo-recommendationservice")
            .spec.template.spec.containers[].image) = "${{ secrets.DOCKER_USERNAME }}/otel-demo-recommendation-service:${{ github.run_id }}"
          ' kubernetes/recommendation/deploy.yaml

      - name: Update tags in kubernetes three-deploy manifest
        run: |
          yq -i '
          (. | select(.kind == "Deployment" and .metadata.name == "opentelemetry-demo-adservice")
          .spec.template.spec.containers[].image) = "${{ secrets.DOCKER_USERNAME }}/otel-demo-ad-service:${{ github.run_id }}" |

          (. | select(.kind == "Deployment" and .metadata.name == "opentelemetry-demo-productcatalogservice")
          .spec.template.spec.containers[].image) = "${{ secrets.DOCKER_USERNAME }}/otel-demo-product-catalog-service:${{ github.run_id }}" |

          (. | select(.kind == "Deployment" and .metadata.name == "opentelemetry-demo-recommendationservice")
          .spec.template.spec.containers[].image) = "${{ secrets.DOCKER_USERNAME }}/otel-demo-recommendation-service:${{ github.run_id }}"
          ' kubernetes/three-deploy.yaml

      - name: Commit and push changes
        run: |
          git config --global user.email "mohdsaud1523@gmail.com"
          git config --global user.name "Saud215"
          git add kubernetes/recommendation/deploy.yaml kubernetes/three-deploy.yaml
          git commit -m "[CI]: Update microservice image tags [skip ci] " || echo "No changes to commit"
          git push origin HEAD:main
